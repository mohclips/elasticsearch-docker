# vim: set syntax=Logstash noai:ts=2:sw=2:et

filter {

    #
    # queries.log
    #
    if [log][file][path] =~ /\/var\/log\/named\/queries.log/ {

      dissect {
        id => "bind_dissect"
        mapping => { 
          #10-Sep-2020 20:22:14.747 queries: info: client @0x7fb23c7f80a0 172.30.5.194#42042 (a.root-servers.net): query: a.root-servers.net IN A + (172.30.5.253)
          #"message" => "%{logdate} queries: info: client @%{?hex} %{client.ip}#%{client.port} (%{?bind.query1}): query: %{dns.question.name} %{dns.question.class} %{dns.question.type} %{dns.header_flags} (%{server.ip})" 
          "message" => "%{logdate} queries: info: client @%{?hex} %{[client][ip]}#%{[client][port]} (%{?bind.query1}): query: %{[dns][question][name]} %{[dns][question][class]} %{[dns][question][type]} %{[dns][header_flags]} (%{[server][ip]})" 
          }
        add_tag => [ "dns_query" ]
      }

    #
    # rpz log
    #
    } else if [log][file][path] =~ /\/var\/log\/named\/rpz.log/ {
    
      dissect {
        id => "rpz_dissect"
        mapping => { 
          #             10-Sep-2020 20:51:36.667 rpz: info: client @0x7fb23cad43c0 172.30.5.102#58610 (web.facebook.com): rpz QNAME NXDOMAIN rewrite web.facebook.com via web.facebook.com.facebook.local
          "message" => "%{logdate} rpz: info: client @%{?hex} %{[client][ip]}#%{[client][port]} (%{?bind.query1}): rpz QNAME NXDOMAIN rewrite %{[dns][question][name]} via %{?redirect}" 
          }
        add_tag => [ "dns_rpz" ]
      }

    } else {

      mutate {
        add_tag => [ "dns_broken" ]
      }
    }

    date {
      #14-Jul-2020 20:25:01.365
      id => "bind_date"
      match => [ "logdate", "dd-MMM-YYYY HH:mm:ss.SSS" ]
      # it's already Zulu
      timezone => "Etc/UTC"
    }

    mutate {
      id => "bind_cfg"
      copy => { "[agent][name]" => "[server][name]" }

      # copy client ip here, so we can resolve it and replace it with the DNS filter
      copy => { "[client][ip]" => "[client][address]" }
    }

    # do a look up of the local ip
    dns {
      reverse => [ "[client][address]" ]

      nameserver => {
          address => ["172.30.5.253"]
      }

      action => "replace"
      hit_cache_size => 8000 
      hit_cache_ttl => 300 
      failed_cache_size => 1000 
      failed_cache_ttl => 300

      #hostsfile => [ "/usr/share/logstash/config/hostsfile" ]
    }

    # tidy
    mutate {
      id => "bind_tidy"
      remove_field => [ "agent", "event", "logdate", "message", "log.offset" ]
      #add_tag => [ "idm_dns" ]
      remove_tag => [ "beats_input_codec_plain_applied" ]
    }

} # filter
